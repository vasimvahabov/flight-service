name: Commit Stage
on: push

#env:
#  IMAGE_NAME: ghcr.io/vasimvahabov/flight-service
#  VERSION: 0.1.1

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Load Environment variables from .env file
        uses: aarcangeli/load-dotenv@v1
        with:
          expand: true
          path: '.'
          filenames: .env
      - name: Export env variables to GitHub
        run: |
          echo "IMAGE_NAME_FLIGHT_SERVICE=${{ steps.dotenv.outputs.IMAGE_NAME_FLIGHT_SERVICE }}" >> $GITHUB_ENV
          echo "IMAGE_VERSION_FLIGHT_SERVICE=${{ steps.dotenv.outputs.IMAGE_VERSION_FLIGHT_SERVICE }}" >> $GITHUB_ENV
      - name: Checkout the source code
        uses: actions/checkout@v4
      - name: Set up the JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: gradle
      - name: Scan the code vulnerability
        uses: anchore/scan-action@v4
        id: scan
        with:
          path: "${{ github.workspace }}"
          fail-build: true
          severity-cutoff: high
      - name: Upload the vulnerability report
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}
      - name: Build, unit tests and integration tests
        run: |
          chmod +x gradlew
          ./gradlew build
  package:
    name: Package and Publish
    runs-on: ubuntu-22.04
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [ build ]
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - name: Checkout the source code
        uses: actions/checkout@v4
      - name: Set up the JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: gradle
      - name: Build the container image
        run: |
          chmod +x gradlew
          ./gradlew printParameters bootBuildImage \
          -Pversion=${IMAGE_VERSION_FLIGHT_SERVICE}
      - name: Scan OCI the image vulnerability
        uses: anchore/scan-action@v4
        id: scan
        with:
          image: ${IMAGE_VERSION_FLIGHT_SERVICE}:${IMAGE_VERSION_FLIGHT_SERVICE}
          fail-build: false
          severity-cutoff: high
      - name: Upload the vulnerability report
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}
      - name: Log into the container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish the container image
        run: docker push ${IMAGE_NAME_FLIGHT_SERVICE}:${IMAGE_VERSION_FLIGHT_SERVICE}